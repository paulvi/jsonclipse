/**
 * generated by Xtext
 */
package org.jsonclipse.formatting;

import com.google.inject.Inject;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.formatting.impl.AbstractDeclarativeFormatter;
import org.eclipse.xtext.formatting.impl.FormattingConfig;
import org.eclipse.xtext.formatting.impl.FormattingConfig.IndentationLocatorEnd;
import org.eclipse.xtext.formatting.impl.FormattingConfig.IndentationLocatorStart;
import org.eclipse.xtext.formatting.impl.FormattingConfig.LinewrapLocator;
import org.eclipse.xtext.formatting.impl.FormattingConfig.NoSpaceLocator;
import org.jsonclipse.services.JsonGrammarAccess;

/**
 * This class contains custom formatting description.
 * 
 * see : http://www.eclipse.org/Xtext/documentation/latest/xtext.html#formatting
 * on how and when to use it
 * 
 * Also see {@link org.eclipse.xtext.xtext.XtextFormattingTokenSerializer} as an example
 */
@SuppressWarnings("all")
public class JsonFormatter extends AbstractDeclarativeFormatter {
  @Inject
  private JsonGrammarAccess _jsonGrammarAccess;
  
  protected void configureFormatting(final FormattingConfig c) {
    c.setSpace("    ");
    IndentationLocatorStart _setIndentationIncrement = c.setIndentationIncrement();
    TerminalRule _oBJECT_STARTRule = this._jsonGrammarAccess.getOBJECT_STARTRule();
    _setIndentationIncrement.after(_oBJECT_STARTRule);
    IndentationLocatorEnd _setIndentationDecrement = c.setIndentationDecrement();
    TerminalRule _oBJECT_ENDRule = this._jsonGrammarAccess.getOBJECT_ENDRule();
    _setIndentationDecrement.before(_oBJECT_ENDRule);
    IndentationLocatorStart _setIndentationIncrement_1 = c.setIndentationIncrement();
    TerminalRule _aRRAY_STARTRule = this._jsonGrammarAccess.getARRAY_STARTRule();
    _setIndentationIncrement_1.after(_aRRAY_STARTRule);
    IndentationLocatorEnd _setIndentationDecrement_1 = c.setIndentationDecrement();
    TerminalRule _aRRAY_ENDRule = this._jsonGrammarAccess.getARRAY_ENDRule();
    _setIndentationDecrement_1.before(_aRRAY_ENDRule);
    NoSpaceLocator _setNoSpace = c.setNoSpace();
    TerminalRule _vALUE_SEPRule = this._jsonGrammarAccess.getVALUE_SEPRule();
    _setNoSpace.before(_vALUE_SEPRule);
    NoSpaceLocator _setNoSpace_1 = c.setNoSpace();
    TerminalRule _nAME_SEPRule = this._jsonGrammarAccess.getNAME_SEPRule();
    _setNoSpace_1.before(_nAME_SEPRule);
    LinewrapLocator _setLinewrap = c.setLinewrap();
    TerminalRule _oBJECT_STARTRule_1 = this._jsonGrammarAccess.getOBJECT_STARTRule();
    _setLinewrap.after(_oBJECT_STARTRule_1);
    LinewrapLocator _setLinewrap_1 = c.setLinewrap();
    TerminalRule _oBJECT_ENDRule_1 = this._jsonGrammarAccess.getOBJECT_ENDRule();
    _setLinewrap_1.before(_oBJECT_ENDRule_1);
    LinewrapLocator _setLinewrap_2 = c.setLinewrap();
    TerminalRule _aRRAY_STARTRule_1 = this._jsonGrammarAccess.getARRAY_STARTRule();
    _setLinewrap_2.after(_aRRAY_STARTRule_1);
    LinewrapLocator _setLinewrap_3 = c.setLinewrap();
    TerminalRule _aRRAY_ENDRule_1 = this._jsonGrammarAccess.getARRAY_ENDRule();
    _setLinewrap_3.before(_aRRAY_ENDRule_1);
    LinewrapLocator _setLinewrap_4 = c.setLinewrap();
    TerminalRule _vALUE_SEPRule_1 = this._jsonGrammarAccess.getVALUE_SEPRule();
    _setLinewrap_4.after(_vALUE_SEPRule_1);
  }
}
